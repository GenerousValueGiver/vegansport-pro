import tweepy
import time
import random

# --- Configuration (√† remplir par l'utilisateur) ---
# Cl√©s d'API Twitter (X)
CONSUMER_KEY = "VOTRE_CONSUMER_KEY"
CONSUMER_SECRET = "VOTRE_CONSUMER_SECRET"
ACCESS_TOKEN = "VOTRE_ACCESS_TOKEN"
ACCESS_TOKEN_SECRET = "VOTRE_ACCESS_TOKEN_SECRET"

# Proxies (optionnel, pour √©viter les blocages IP)
# Format: user:pass@ip:port
PROXIES = [
    # "user1:pass1@192.168.1.1:8080",
    # "user2:pass2@192.168.1.2:8080",
]

# --- Prompts pour Kimi K2 (exemples) ---
# Ces prompts seront utilis√©s pour g√©n√©rer des r√©ponses ou des articles courts
KIMI_K2_PROMPTS = [
    "G√©n√®re un tweet engageant sur les bienfaits des prot√©ines v√©g√©tales pour les sportifs d'endurance, sans gluten ni lactose. Inclure un appel √† l'action doux vers notre blog.",
    "R√©dige un court paragraphe sur l'importance de l'hydratation post-entra√Ænement pour les athl√®tes vegan. Termine par une question pour engager la conversation.",
    "Cr√©e une recette rapide de smoothie prot√©in√© vegan et halal, avec une liste d'ingr√©dients et un lien vers notre guide complet.",
    "Explique pourquoi les dattes sont un excellent carburant pour les sportifs d'endurance vegan. Mentionne notre blog pour plus de conseils."
]

# --- Mots-cl√©s cibles pour les hashtags ---
TARGET_KEYWORDS = [
    "#veganprotein",
    "#plantbasedgains",
    "#vegantrail",
    "#nutritionvegan",
    "#sportvegan",
    "#sansgluten",
    "#sanslactose",
    "#halalnutrition",
    "#recettevegan",
    "#endurance"
]

# --- URL de votre blog ---
BLOG_URL = "https://vegansport-pro.netlify.app/"

# --- Fonctions du Bot ---

def get_random_proxy():
    if PROXIES:
        return {"http": random.choice(PROXIES), "https": random.choice(PROXIES)}
    return None

def get_kimi_k2_response(prompt):
    # Cette fonction simule une r√©ponse de Kimi K2.
    # En r√©alit√©, vous int√©greriez ici l'API de Kimi K2.
    # Pour le test local, nous utilisons une r√©ponse pr√©-d√©finie.
    responses = {
        KIMI_K2_PROMPTS[0]: f"Boostez votre endurance avec les prot√©ines v√©g√©tales ! üí™ D√©couvrez nos recettes sans gluten ni lactose pour des performances optimales. Plus de conseils sur {BLOG_URL} #veganprotein #plantbasedgains",
        KIMI_K2_PROMPTS[1]: f"L'hydratation post-entra√Ænement est cl√© pour les athl√®tes vegan ! üíß Comment optimisez-vous votre r√©cup√©ration apr√®s l'effort ? #nutritionvegan #sportvegan",
        KIMI_K2_PROMPTS[2]: f"Smoothie prot√©in√© vegan & halal express ! üçå Ingr√©dients: banane, prot√©ine de pois halal, lait d'amande, beurre de cacahu√®te. Recette compl√®te sur {BLOG_URL} #recettevegan #halalnutrition",
        KIMI_K2_PROMPTS[3]: f"Les dattes, le secret d'√©nergie des sportifs vegan ! üöÄ Source naturelle de glucides pour l'endurance. Plus de conseils sur {BLOG_URL} #vegantrail #endurance"
    }
    return responses.get(prompt, "Contenu g√©n√©r√© par Kimi K2. Visitez notre blog pour plus d'infos !")

def post_tweet(api, content):
    try:
        api.update_status(content)
        print(f"Tweet publi√© avec succ√®s : {content}")
        return True
    except tweepy.TweepyException as e:
        print(f"Erreur lors de la publication du tweet : {e}")
        return False

def run_bot():
    print("D√©marrage du bot viral...")

    # Authentification Twitter
    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
    auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)

    # Utilisation du proxy si configur√©
    # api = tweepy.API(auth, proxy=get_random_proxy() if PROXIES else None)
    api = tweepy.API(auth) # Pour le test local, sans proxy

    # Test de la connexion
    try:
        api.verify_credentials()
        print("Authentification Twitter r√©ussie !")
    except tweepy.TweepyException as e:
        print(f"Erreur d'authentification Twitter : {e}")
        print("Veuillez v√©rifier vos cl√©s d'API.")
        return

    tweets_sent = 0
    max_tweets_per_day = 50
    interval_seconds = 60 # 1 minute entre chaque tweet

    while tweets_sent < max_tweets_per_day:
        prompt = random.choice(KIMI_K2_PROMPTS)
        tweet_content = get_kimi_k2_response(prompt)
        
        # Ajout d'un hashtag al√©atoire si le tweet n'en contient pas d√©j√† assez
        if sum(1 for char in tweet_content if char == '#') < 2:
            tweet_content += " " + random.choice(TARGET_KEYWORDS)

        if post_tweet(api, tweet_content):
            tweets_sent += 1
            print(f"Tweets envoy√©s aujourd'hui : {tweets_sent}/{max_tweets_per_day}")
        
        if tweets_sent < max_tweets_per_day:
            time.sleep(interval_seconds)

    print("Limite de tweets atteinte pour aujourd'hui. Le bot s'arr√™te.")

if __name__ == "__main__":
    run_bot()


